# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: 'Setup Dart'
        uses: dart-lang/setup-dart@v1.3
      - name: 'Setup Flutter'
        uses: subosito/flutter-action@v2
      - name: 'Setup npm'
        uses: actions/setup-node@v4
      - run: npm install -D @tailwindcss/typography
      - name: 'Build Jaspr'
        run: |
          curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64
          chmod +x tailwindcss-linux-x64
          mv tailwindcss-<your-platform> /usr/local/bin/tailwindcss 
          dart pub global activate jaspr_cli
          source /home/runner/.bash_profile
          jaspr build --verbose
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload only jaspr build output
          path: 'build/jaspr'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
